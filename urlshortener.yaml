AWSTemplateFormatVersion: 2010-09-09
Resources:
  URLBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      AccessControl: PublicRead
      LifecycleConfiguration:
        Rules:
          - Id : DeleteAfter30Days
            Status: 'Enabled'
            ExpirtationInDays: 30
  Metadata:
      'AWS::CloudFormation::Designer':
        id: 62909428-f64c-48be-bb5d-97d2288e7600
  S3PutGetObjectRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
    Metadata:
      'AWS::CloudFormation::Designer':
        id: efed1d03-2d40-4ed1-8472-1c276cbcf15c
  S3PutGetObjectPolicy:
    DependsOn:
      - S3PutGetObjectRole
      - URLBucket
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: S3PutGetObjectPolicy
      Roles:
        - !Ref S3PutGetObjectRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource: !Join
              - ''
              - - !GetAtt URLBucket.Arn
                - /*
          - Sid: VisualEditor1
            Effect: Allow
            Action: 's3:ListBucket'
            Resource: !GetAtt
              - URLBucket
              - Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5ee891d6-9f72-462f-84da-59abf93c0f12
  shortenurl:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - S3PutGetObjectRole
      - S3PutGetObjectPolicy
    Properties:
      Code:
        ZipFile: |
          import json
          import boto3
          import random
          import string
          import botocore
          url = 'url.cwoellner.com'
          def createSiteId():
              s3 = boto3.resource('s3')
              hexcode = ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase + string.digits) for _ in range(8)) + '.html'
              try:
                  s3.Object(url, hexcode).load()
              except botocore.exceptions.ClientError as e:
                  if e.response['Error']['Code'] == "404":
                      return hexcode
                  else:
                      raise
              else:
                  return createSiteId()
          def lambda_handler(event, context):
              longurl = event['queryStringParameters']['longurl']
              hexcode = createSiteId()
              pagecontent = '<head> <meta http-equiv="Refresh" content="0; URL=' + longurl + '"> </head>'
              bytestream = bytes(pagecontent.encode('UTF-8'))
              s3 = boto3.client('s3')
              s3.put_object(Bucket=url, Key=hexcode, Body=bytestream, ContentType="text/html")
              shorturl = 'https://' + url + '/' + hexcode
              response = {}
              response['shorturl'] = shorturl
              return {
                  'statusCode': 200,
                  'headers': {
                      'Access-Control-Allow-Origin': '*'
                  },
                  'body': json.dumps(response)
              }
      Role: !GetAtt
        - S3PutGetObjectRole
        - Arn
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      MemorySize: 128
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ad5a1478-847f-49fd-ab0c-68b99c75bd59
  urlshorteningapi:
    Type: 'AWS::ApiGateway::RestApi'
    DependsOn:
      - shortenurl
    Properties:
      Name: URL Shortening API
      Description: API used for Shortening URLs
      FailOnWarnings: true
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5fffabc5-02d8-4962-bb0d-f75a55eb94e7
  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: !GetAtt
        - shortenurl
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref 'AWS::AccountId'
          - ':'
          - !Ref urlshorteningapi
          - /*
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1aeaa847-aee4-4823-aa98-34f587c04ecc
  UrlApiStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref ApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId: !Ref urlshorteningapi
      StageName: prod
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5d344499-afb2-480d-98dd-0b6fd273068d
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8b6502b3-d996-45e6-a9c5-a336c64e464f
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt
        - ApiGatewayCloudWatchLogsRole
        - Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 97bebe3d-3ade-4d02-8e1b-ba872f148fb7
  shorteningResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref urlshorteningapi
      ParentId: !GetAtt
        - urlshorteningapi
        - RootResourceId
      PathPart: shorten
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7bcc2cba-55cc-4d79-910e-ca987aa6a149
  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - shortenRequest
    Properties:
      RestApiId: !Ref urlshorteningapi
      StageName: DummyStage
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 14d4605c-1e65-4822-a352-c5de1fcad857
  shortenRequest:
    DependsOn: LambdaPermission
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - ':lambda:path/2015-03-31/functions/'
            - !GetAtt
              - shortenurl
              - Arn
            - /invocations
        IntegrationResponses:
          - StatusCode: 200
        RequestTemplates:
          application/json: !Join
            - ''
            - - '{'
              - '"longurl": "$input.params(''longurl'')"'
              - '}'
      RequestParameters:
        method.request.querystring.lonngurl: false
      ResourceId: !Ref shorteningResource
      RestApiId: !Ref urlshorteningapi
      MethodResponses:
        - StatusCode: 200
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 67a717c8-fb02-4051-90b2-c19a7a78bf20
  lambdaApiGatewayInvoke:
    Type: 'AWS::Lambda::Permission'
    DependsOn: shortenurl
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt
        - shortenurl
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub >-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${urlshorteningapi}/prod/shorten
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fcb42b69-afdb-437e-b087-ddb42ac6a546
